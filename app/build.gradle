import io.gitlab.arturbosch.detekt.Detekt

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'com.google.gms.google-services'
apply plugin: "io.gitlab.arturbosch.detekt"


android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    // exoPlayer 2.9.0 以降は Java 8 compiler support を要求する
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    defaultConfig {
        targetSdkVersion target_sdk_version
        minSdkVersion min_sdk_version

        versionCode 508
        versionName "5.0.8"
        applicationId "jp.juggler.subwaytooter"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    viewBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = jvm_target
        freeCompilerArgs += [
                "-opt-in=kotlin.ExperimentalStdlibApi",
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
                //      "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                //      "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi",
        ]
    }

    // kotlin 1.6.0にすると This version (1.0.5) of the Compose Compiler requires Kotlin version 1.5.31 but you appear to be using Kotlin version 1.6.0 which is not known to be compatible. と怒られる
    //    buildFeatures {
    //        compose true
    //    }
    //    composeOptions {
    //        kotlinCompilerExtensionVersion compose_version
    //    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            lintOptions {
                disable 'MissingTranslation'
            }
        }
    }

    // Specifies comma-separated list of flavor dimensions.
    flavorDimensions "rcOrDev"

    productFlavors {
        rc {
            dimension "rcOrDev"
        }
    }

    // Generate Signed APK のファイル名を変更
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all {
                // Rename APK
                def versionCode = defaultConfig.versionCode
                def versionName = defaultConfig.versionName
                def flavor = variant.flavorName
                def date = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                def branch = gitBranch()
                outputFileName = "../../SubwayTooter-${branch}-${flavor}-${versionCode}-${versionName}-${date}.apk"
            }
        }
    }

    packagingOptions {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/1064
        pickFirst("META-INF/atomicfu.kotlin_module")
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        exclude 'META-INF/DEPENDENCIES'
    }

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    lintOptions {
        warning 'DuplicatePlatformClasses'
    }
}

static def gitBranch() {
    def branch = "(no branch)"
    def proc = "git status".execute()
    proc.in.eachLine { line ->
        def matcher = line =~ /\AOn branch (\S+)/
        if (matcher) branch = matcher.group(1)
    }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

kapt {
    useBuildCache = true
}

dependencies {
    // desugar_jdk_libs 2.0.0 は AGP 7.4.0-alpha10 以降を要求する
    //noinspection GradleDependency
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_lib_bersion"

    implementation(project(":base"))
    implementation project(':colorpicker')
    implementation project(':emoji')
    implementation project(':apng_android')
    implementation fileTree(include: ['*.aar'], dir: 'src/main/libs')

    // App1 とサーバ情報カラムで使う
    api "org.conscrypt:conscrypt-android:2.5.2"

    kapt "androidx.annotation:annotation:1.5.0"
    kapt "androidx.room:room-compiler:$roomVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version")
}

repositories {
    mavenCentral()
}

// detekt
def projectSource = file(projectDir)
def configFile = files("$rootDir/config/detekt/config.yml")
def baselineFile = file("$rootDir/config/detekt/baseline.xml")
def kotlinFiles = "**/*.kt"
def resourceFiles = "**/resources/**"
def buildFiles = "**/build/**"

tasks.register("detektAll", Detekt) {
    description = "Custom DETEKT build for all modules"

    // activate all available (even unstable) rules.
    allRules = false

    // a way of suppressing issues before introducing detekt
    // baseline = file("$rootDir/config/detekt/baseline.xml")

    parallel = true
    ignoreFailures = false
    autoCorrect = false

    // preconfigure defaults
    buildUponDefaultConfig = true

    setSource(projectSource)
    config.setFrom(configFile)
    if (baselineFile.isFile()) {
        baseline.set(baselineFile)
    }
    include(kotlinFiles)
    exclude(resourceFiles, buildFiles)
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false

        xml.required.set(true)
        xml.outputLocation = file("$buildDir/reports/detekt/st-${name}.xml")
        html.required.set(true)
        html.outputLocation = file("$buildDir/reports/detekt/st-${name}.html")
        txt.required.set(true)
        txt.outputLocation = file("$buildDir/reports/detekt/st-${name}.txt")
        sarif.required.set(true)
        sarif.outputLocation = file("$buildDir/reports/detekt/st-${name}.sarif")
    }
}
