plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'

//    apply plugin: 'kotlin-android'
//    apply plugin: 'kotlin-kapt'
//    import java.text.SimpleDateFormat
//    apply plugin: 'com.android.application'
//    apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
//    apply plugin: 'com.google.gms.google-services'
}

android {
    namespace 'jp.juggler.base'
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // desugar_jdk_libs 2.0.0 は AGP 7.4.0-alpha10 以降を要求する
    //noinspection GradleDependency
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_lib_bersion"

    implementation "androidx.exifinterface:exifinterface:1.3.5"


    implementation "androidx.appcompat:appcompat:$appcompat_version"

    implementation "androidx.core:core-ktx:1.9.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-reflect"


    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    implementation "androidx.startup:startup-runtime:$startup_version"

    // video transcoder https://github.com/natario1/Transcoder
    implementation "com.otaliastudios:transcoder:0.10.4"

    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion"
    implementation "ru.gildor.coroutines:kotlin-coroutines-okhttp:1.0"
}


